
import POJO.Film;
import POJO.Klient;
import POJO.Nosnik;
import POJO.Pracownik;
import POJO.Rezyser;
import POJO.Stanowisko;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import util.NewHibernateUtil;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author menf
 */
public class NewJFrame extends javax.swing.JFrame {

    private static String QUERY_BASED_ON_FIRST_NAME = "from Klient a where a.imie like '";
    private static String QUERY_BASED_ON_LAST_NAME = "from Klient a where a.nazwisko like '";
    private Session session;
    private int ROLE = -1;
    private int loggedId = -1;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        loginPanel = new javax.swing.JPanel();
        passField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        logField = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        loginError = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        queryButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        moviesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        moviesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        orderButton = new javax.swing.JButton();
        addMoviePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        newMovieTitle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        newMovieYear = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        newMovieQuant = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        newMovieCarrier = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        newMovieDirector = new javax.swing.JComboBox<>();
        addMovieButton = new javax.swing.JButton();
        newMovieError = new javax.swing.JLabel();
        removeMoviePanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        removeMovieError = new javax.swing.JLabel();
        removeMovieTitle = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        removeMovieCarrier = new javax.swing.JComboBox<>();
        removeMovieButton = new javax.swing.JButton();
        transactionPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        acceptTransactionButton = new javax.swing.JButton();
        declineTransactionButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        transakcjeMenu = new javax.swing.JMenu();
        adminMenu = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        moviesMenu = new javax.swing.JMenu();
        menuLogOut = new javax.swing.JMenu();

        jMenuItem5.setText("jMenuItem5");

        jMenuItem6.setText("jMenuItem6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginPanel.setName("jPanel_Login"); // NOI18N

        loginButton.setLabel("Zaloguj");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        label1.setMinimumSize(new java.awt.Dimension(40, 20));
        label1.setText("Login:");

        label2.setText("Hasło:");

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label3.setText("Logowanie");

        loginError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loginError.setForeground(new java.awt.Color(255, 0, 51));
        loginError.setText("Bląd uwierzytelniania");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginPanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(logField)))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(loginButton)))
                .addGap(135, 135, 135))
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(logField))
                .addGap(12, 12, 12)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passField))
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addGap(30, 30, 30)
                .addComponent(loginError)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jButton1.setText("panel 1");

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setColumnSelectionAllowed(true);
        resultTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(resultTable);
        resultTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("Imie");
        jLabel1.setToolTipText("");

        jLabel2.setText("Nazwisko");

        queryButton.setText("GO");
        queryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(firstNameTextField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addComponent(queryButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(queryButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jButton2.setText("panel 2");

        jLabel3.setText("HEHE");
        jLabel3.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel3)))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel3)
                .addGap(71, 71, 71)
                .addComponent(jButton2)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        moviesTable.setAutoCreateRowSorter(true);
        moviesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        moviesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(moviesTable);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Dostępne pozycje");

        orderButton.setText("Zamów");
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout moviesPanelLayout = new javax.swing.GroupLayout(moviesPanel);
        moviesPanel.setLayout(moviesPanelLayout);
        moviesPanelLayout.setHorizontalGroup(
            moviesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
            .addGroup(moviesPanelLayout.createSequentialGroup()
                .addGroup(moviesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(moviesPanelLayout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(moviesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(orderButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        moviesPanelLayout.setVerticalGroup(
            moviesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moviesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(orderButton)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jLabel5.setText("Tytuł");

        jLabel6.setText("Rok produkcji");

        jLabel7.setText("Ilość");

        jLabel8.setText("Nośnik");

        newMovieCarrier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Reżyser");

        newMovieDirector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addMovieButton.setText("Dodaj Film");
        addMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieButtonActionPerformed(evt);
            }
        });

        newMovieError.setForeground(new java.awt.Color(255, 0, 51));
        newMovieError.setText("Wprowadź poprawne dane!");

        javax.swing.GroupLayout addMoviePanelLayout = new javax.swing.GroupLayout(addMoviePanel);
        addMoviePanel.setLayout(addMoviePanelLayout);
        addMoviePanelLayout.setHorizontalGroup(
            addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMoviePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMoviePanelLayout.createSequentialGroup()
                        .addComponent(newMovieError)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(addMoviePanelLayout.createSequentialGroup()
                        .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newMovieTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(newMovieYear, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newMovieQuant, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newMovieCarrier, javax.swing.GroupLayout.Alignment.TRAILING, 0, 130, Short.MAX_VALUE)
                            .addComponent(newMovieDirector, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(addMovieButton)
                        .addGap(49, 49, 49))))
        );
        addMoviePanelLayout.setVerticalGroup(
            addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMoviePanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newMovieYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newMovieQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newMovieCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newMovieDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMovieButton))
                .addGap(33, 33, 33)
                .addComponent(newMovieError)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jLabel10.setText("Wybierz Film");

        removeMovieError.setForeground(new java.awt.Color(255, 0, 0));
        removeMovieError.setText("Nie można usunąć filmu!");

        removeMovieTitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setText("Wybierz Nośnik");

        removeMovieCarrier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        removeMovieButton.setText("Usuń Film");
        removeMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMovieButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeMoviePanelLayout = new javax.swing.GroupLayout(removeMoviePanel);
        removeMoviePanel.setLayout(removeMoviePanelLayout);
        removeMoviePanelLayout.setHorizontalGroup(
            removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMoviePanelLayout.createSequentialGroup()
                .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeMoviePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeMovieError)
                            .addGroup(removeMoviePanelLayout.createSequentialGroup()
                                .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeMovieCarrier, 0, 155, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(removeMoviePanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(removeMovieButton)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        removeMoviePanelLayout.setVerticalGroup(
            removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMoviePanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(removeMoviePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeMovieCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(removeMovieButton)
                .addGap(58, 58, 58)
                .addComponent(removeMovieError)
                .addGap(23, 23, 23))
        );

        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(transactionTable);

        acceptTransactionButton.setText("Zatwierdź Transakcję");
        acceptTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptTransactionButtonActionPerformed(evt);
            }
        });

        declineTransactionButton.setText("Odrzuć Transakcję");
        declineTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineTransactionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transactionPanelLayout = new javax.swing.GroupLayout(transactionPanel);
        transactionPanel.setLayout(transactionPanelLayout);
        transactionPanelLayout.setHorizontalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(acceptTransactionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(declineTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        transactionPanelLayout.setVerticalGroup(
            transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(transactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptTransactionButton)
                    .addComponent(declineTransactionButton))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        transakcjeMenu.setText("Transakcje");
        jMenuBar1.add(transakcjeMenu);

        adminMenu.setText("Administracja");

        jMenuItem7.setText("Dodaj Film");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        adminMenu.add(jMenuItem7);

        jMenuItem1.setText("Usun Film");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        adminMenu.add(jMenuItem1);

        jMenuBar1.add(adminMenu);

        moviesMenu.setText("Baza FIlmów");
        moviesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviesMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(moviesMenu);

        menuLogOut.setText("Wyloguj");
        menuLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuLogOutMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuLogOut);
        menuLogOut.getAccessibleContext().setAccessibleName("jMenu_User");
        menuLogOut.getAccessibleContext().setAccessibleDescription("");

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(moviesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addMoviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(removeMoviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(transactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(moviesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addMoviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(removeMoviePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(transactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        loginPanel.getAccessibleContext().setAccessibleName("jPanel_Login");
        moviesPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButtonActionPerformed
        if (!firstNameTextField.getText().trim().equals("")) {
            runQueryBasedOnFirstName();
        } else if (!lastNameTextField.getText().trim().equals("")) {
            runQueryBasedOnLastName();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_queryButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        
        
        String pass = new String(passField.getPassword());
        if (!logField.getText().trim().equals("") && pass.length() > 0) {
            loginError.setVisible(false);
            try {
                List uzytkownicy;
                session.beginTransaction();

                Query query = session.createQuery("from Klient  where login is '" + logField.getText() + "' and haslo is '" + pass + "'");
                uzytkownicy = query.list();
                session.getTransaction().commit();
                if (!uzytkownicy.isEmpty()) {
                    ROLE = 0;
                    loggedId = ((Klient) uzytkownicy.get(0)).getIdKlienta();
                    loginPanel.setVisible(false);
                    jPanel1.setVisible(true);
                    
                //loginError.setVisible(true);
                

            }else {
                    session.beginTransaction();
                    query = session.createQuery("from Pracownik  where login is '" + logField.getText() + "' and haslo is '" + pass + "'");
                    uzytkownicy = query.list();
                    if (!uzytkownicy.isEmpty()) {
                        Pracownik p = (Pracownik) uzytkownicy.get(0);
                        if (p.getIdStanowiska() == 1) {
                            ROLE = 1;
                        } else {
                            ROLE = 2;
                        }
                        loggedId = ((Pracownik) uzytkownicy.get(0)).getIdPracownika();
                        loginPanel.setVisible(false);
                        jPanel1.setVisible(true);
                    }
                    loginError.setVisible(true);
                    session.getTransaction().commit();
                }
            } catch (HibernateException he) {
                he.printStackTrace();
            }
        }
        setVisibilities();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void moviesMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviesMenuMouseClicked
        // TODO add your handling code here:
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        loginPanel.setVisible(false);
        moviesPanel.setVisible(true);
        addMoviePanel.setVisible(false);
        showMovies();
    }//GEN-LAST:event_moviesMenuMouseClicked

    private void menuLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuLogOutMouseClicked
        // TODO add your handling code here:
        ROLE = -1;
        loggedId = -1;
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        moviesPanel.setVisible(false);
        loginPanel.setVisible(true);
        addMoviePanel.setVisible(false);
        setVisibilities();
    }//GEN-LAST:event_menuLogOutMouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        List carriers = null, directors = null;
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        moviesPanel.setVisible(false);
        loginPanel.setVisible(false);  
        addMoviePanel.setVisible(true);
        removeMoviePanel.setVisible(false);
        newMovieError.setVisible(false);
        
        
        newMovieCarrier.removeAllItems();
        
        session.beginTransaction();
        Query q = session.createQuery("from Nosnik order by idNosnika");
        carriers = q.list();
        session.getTransaction().commit();
        
        for(Object nosnik : carriers){
            
            newMovieCarrier.addItem(((Nosnik)nosnik).getTyp());
        }
        
        newMovieDirector.removeAllItems();
        session.beginTransaction();
        q = session.createQuery("from Rezyser order by idRezysera");
        directors = q.list();
        session.getTransaction().commit();
        
        for(Object rezyser : directors){
            newMovieDirector.addItem(((Rezyser)rezyser).getImie()+" "+((Rezyser)rezyser).getNazwisko());
        }
        
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void addMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieButtonActionPerformed

        newMovieError.setVisible(false);
        if(newMovieTitle.getText().trim().equals("") || 
           Integer.parseInt(newMovieYear.getText())<1895 || 
           Integer.parseInt(newMovieQuant.getText()) < 0 || 
           newMovieCarrier.getSelectedIndex() < 0 ||
           newMovieDirector.getSelectedIndex()< 0
                ){
            newMovieError.setVisible(true);
        }else{
            
            Film newFilm = new Film();
            
            newFilm.setTytul(newMovieTitle.getText());
            newFilm.setRokProdukcji(Short.parseShort(newMovieYear.getText()));
            newFilm.setIlosc(Long.parseLong(newMovieQuant.getText()));
            newFilm.setIdRezysera(newMovieDirector.getSelectedIndex()+1);
            newFilm.setIdNosnika(newMovieCarrier.getSelectedIndex()+1);
            try{
            session.beginTransaction();
            
            session.save(newFilm);
            }catch(Exception e){
                
            }
            finally{
                session.getTransaction().commit();
            }
            
           
            
        }
        
        
        
    }//GEN-LAST:event_addMovieButtonActionPerformed

    private void removeMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMovieButtonActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
    }//GEN-LAST:event_removeMovieButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        List carriers = null, movies = null;
        jPanel1.setVisible(false);
        jPanel2.setVisible(false);
        moviesPanel.setVisible(false);
        loginPanel.setVisible(false);  
        addMoviePanel.setVisible(false);
        removeMoviePanel.setVisible(true);
        removeMovieError.setVisible(false);
        
        
        removeMovieCarrier.removeAllItems();
        removeMovieTitle.removeAllItems();
        
        session.beginTransaction();
        Query q = session.createQuery("from Film order by idFilmu");
        movies = q.list();
        session.getTransaction().commit();
        
        for(Object film : movies){         
            removeMovieTitle.addItem(((Film)film).getTytul());
        }
        
        session.beginTransaction();
        q = session.createQuery("from Nosnik order by idNosnika");
        carriers = q.list();
        session.getTransaction().commit();
        
        for(Object nosnik : carriers){
            removeMovieCarrier.addItem(((Nosnik)nosnik).getTyp());
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderButtonActionPerformed

    private void acceptTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptTransactionButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptTransactionButtonActionPerformed

    private void declineTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineTransactionButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_declineTransactionButtonActionPerformed
 
    private void runQueryBasedOnFirstName() {
        executeHQLQuery(QUERY_BASED_ON_FIRST_NAME + firstNameTextField.getText() + "%'");
    }

    private void runQueryBasedOnLastName() {
        executeHQLQuery(QUERY_BASED_ON_LAST_NAME + lastNameTextField.getText() + "%'");
    }

    private void displayResult(List resultList) {

        Vector<String> tableHeaders = new Vector<>();
        Vector tableData = new Vector();
        tableHeaders.add("Id");
        tableHeaders.add("Imię");
        tableHeaders.add("Nazwisko");
        tableHeaders.add("Data urodzenia");
        for (Object o : resultList) {
            Klient actor = (Klient) o;
            Vector<Object> oneRow = new Vector<>();
            oneRow.add(actor.getIdKlienta());
            oneRow.add(actor.getImie());
            oneRow.add(actor.getNazwisko());
            oneRow.add(actor.getDataUrodzenia());
            tableData.add(oneRow);
        }
        resultTable.setModel(new DefaultTableModel(tableData, tableHeaders) {
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        });
    }

    private void showMovies() {
        List moviesList = null, directorList = null;
        try {
            session.beginTransaction();
            Query q = session.createQuery("from Film");
            moviesList = q.list();
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
        Vector<String> tableHeaders = new Vector<>();
        Vector tableData = new Vector();
        tableHeaders.add("Tytuł");
        tableHeaders.add("Rok Produkcji");
        tableHeaders.add("Reżyser");
        tableHeaders.add("Nośnik");
        tableHeaders.add("Dostępność");
        if (!moviesList.isEmpty()) {
            Film film;
            session.beginTransaction();
            Query q;

            for (Object o : moviesList) {
                film = (Film) o;
                Vector<Object> oneRow = new Vector<>();
                q = session.createQuery("from Rezyser a where a.idRezysera IS " + film.getIdRezysera().toString());
                directorList = q.list();
                q = session.createQuery("from Nosnik a where a.idNosnika IS " + film.getIdNosnika().toString());
                oneRow.add(film.getTytul());
                oneRow.add(film.getRokProdukcji());
                oneRow.add(((Rezyser) (directorList.get(0))).getNazwisko());
                oneRow.add(((Nosnik) q.list().get(0)).getTyp());
                if (film.getIlosc() > 0) {
                    oneRow.add("Dostępny");
                } else {
                    oneRow.add("Niedostępny");
                }
                tableData.add(oneRow);
            }
            session.getTransaction().commit();
            moviesTable.setModel(new DefaultTableModel(tableData, tableHeaders) {
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            });
        }

    }

    private void setVisibilities() {

        transakcjeMenu.setVisible(false);
        adminMenu.setVisible(false);
        menuLogOut.setVisible(false);
        moviesMenu.setVisible(false);
        
        
        switch (ROLE) {
            case 0:  //uzytkownik
                menuLogOut.setVisible(true);
                moviesMenu.setVisible(true);
                break;
            case 1:  //admin
                adminMenu.setVisible(true);
                menuLogOut.setVisible(true);
                moviesMenu.setVisible(true);
                break;
            case 2:  //pracownik
                menuLogOut.setVisible(true);
                moviesMenu.setVisible(true);
                break;
            default:

        }
    }

    public void initConnection() {
        session = NewHibernateUtil.getSessionFactory().openSession();
    }

    private void executeHQLQuery(String hql) {
        try {

            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            displayResult(resultList);
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame frame = new NewJFrame();
                frame.initConnection();
                frame.setVisibilities();
                frame.jPanel2.setVisible(false);
                frame.moviesPanel.setVisible(false);
                frame.loginPanel.setVisible(true);
                frame.jPanel1.setVisible(false);
                frame.loginError.setVisible(false);
                frame.addMoviePanel.setVisible(false);
                frame.removeMoviePanel.setVisible(false);
                frame.setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptTransactionButton;
    private javax.swing.JButton addMovieButton;
    private javax.swing.JPanel addMoviePanel;
    private javax.swing.JMenu adminMenu;
    private javax.swing.JButton declineTransactionButton;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JTextField logField;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginError;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JMenu menuLogOut;
    private javax.swing.JMenu moviesMenu;
    private javax.swing.JPanel moviesPanel;
    private javax.swing.JTable moviesTable;
    private javax.swing.JComboBox<String> newMovieCarrier;
    private javax.swing.JComboBox<String> newMovieDirector;
    private javax.swing.JLabel newMovieError;
    private javax.swing.JTextField newMovieQuant;
    private javax.swing.JTextField newMovieTitle;
    private javax.swing.JTextField newMovieYear;
    private javax.swing.JButton orderButton;
    private javax.swing.JPasswordField passField;
    private javax.swing.JButton queryButton;
    private javax.swing.JButton removeMovieButton;
    private javax.swing.JComboBox<String> removeMovieCarrier;
    private javax.swing.JLabel removeMovieError;
    private javax.swing.JPanel removeMoviePanel;
    private javax.swing.JComboBox<String> removeMovieTitle;
    private javax.swing.JTable resultTable;
    private javax.swing.JPanel transactionPanel;
    private javax.swing.JTable transactionTable;
    private javax.swing.JMenu transakcjeMenu;
    // End of variables declaration//GEN-END:variables
}
